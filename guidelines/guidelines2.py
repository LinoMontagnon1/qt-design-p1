# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'guidelines2.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(683, 913)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(30, 10, 611, 55))
        self.label_5.setMaximumSize(QtCore.QSize(16777215, 55))
        self.label_5.setObjectName("label_5")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(30, 127, 611, 3))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_2.setLineWidth(2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setObjectName("line_2")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(30, 80, 611, 51))
        self.label_6.setStyleSheet("font: 75 32pt \"Segoe UI\";\n"
"font-wheight: Bold")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(30, 150, 629, 90))
        self.label_7.setMinimumSize(QtCore.QSize(0, 50))
        self.label_7.setMaximumSize(QtCore.QSize(900, 90))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("font: 16pt \"Segoe UI\";")
        self.label_7.setWordWrap(True)
        self.label_7.setObjectName("label_7")
        self.treeWidget = QtWidgets.QTreeWidget(self.centralwidget)
        self.treeWidget.setGeometry(QtCore.QRect(20, 240, 641, 621))
        self.treeWidget.setStyleSheet("")
        self.treeWidget.setUniformRowHeights(False)
        self.treeWidget.setAnimated(False)
        self.treeWidget.setWordWrap(True)
        self.treeWidget.setHeaderHidden(True)
        self.treeWidget.setObjectName("treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item_0.setFont(0, font)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setWhatsThis(0, "")
        font = QtGui.QFont()
        font.setPointSize(11)
        item_1.setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item_0.setFont(0, font)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(11)
        item_1.setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item_0.setFont(0, font)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        self.treeWidget.topLevelItem(2).child(0).setText(0, "Funcionalidade: Permite o envio de comandos específicos para o sistema.\n"
"\n"
"Uso: Insira os valores necessários nos campos fornecidos e use os botões para enviar\n"
"comandos como \"Exposures\", \"Start CT\", \"Origin\", etc. As descrições dos comandos estão \n"
"disponíveis clicando no ícone de interrogação (?) ao lado de cada comando.\n"
"\n"
"")
        font = QtGui.QFont()
        font.setPointSize(11)
        item_1.setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item_0.setFont(0, font)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(11)
        item_1.setFont(0, font)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item_0.setFont(0, font)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        font = QtGui.QFont()
        font.setPointSize(11)
        item_1.setFont(0, font)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 683, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p><img src=\":/Logo/QT designer assets/logo-ibti SVG.png\"/></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "Guidelines"))
        self.label_7.setText(_translate("MainWindow", "Guideline for the Graphical Interface for the Visualization and Reconstruction of Tomographic Images."))
        self.treeWidget.setSortingEnabled(False)
        self.treeWidget.headerItem().setText(0, _translate("MainWindow", " "))
        __sortingEnabled = self.treeWidget.isSortingEnabled()
        self.treeWidget.setSortingEnabled(False)
        self.treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "CT Visualizer"))
        self.treeWidget.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "Funcionalidade: Esta tela é dedicada à visualização avançada e à reconstrução de imagens médicas, com várias opções de personalização e ajustes de qualidade de\n"
"imagem.\n"
" \n"
"Uso: A interface oferece um visualizador de imagens com opções para ocultar menus desnecessários.\n"
"Inclui botões para abrir imagens, aplicar diferentes colormaps (Gray, Viridis, Plasma, Temperature), e acessar arquivos recentes. Há recursos para exibir e ajustar informações da imagem, como valores mínimos, máximos, média, desvio padrão, soma, foco, kV, e mAs.\n"
"A seção de qualidade de imagem permite desenhar regiões de interesse (ROI) e calcular a razão sinal-ruído (SNR) e a razão contraste-ruído (CNR).\n"
"A tela também oferece opções de visualização tomográfica (Axial, Coronal, Sagital) e filtros para redução de ruído e melhoria de nitidez.\n"
"Além disso, há funcionalidades para realizar reconstruções de imagens via CPU ou GPU,com parâmetros ajustáveis como Dim X, Dim Y, tamanho do pixel e número de fatias. Botões adicionais incluem opções para limpar a visualização, rotacionar a imagem, abrir histogramas e aplicar correções de campo plano.\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
""))
        self.treeWidget.topLevelItem(1).setText(0, _translate("MainWindow", "Data Server"))
        self.treeWidget.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Funcionalidade: Permite ao usuário acesso ao SQL Data Server do sistema.\n"
"\n"
"Uso: com acesso as credenciais do servidor SQL, preencha os campos de Host, User, Password e Database para acessar o servidor.\n"
"Use: Execute Table para execultar uma tabela do servidor e Download CSV para realizar um download da tabela do servidor.\n"
"\n"
"\n"
""))
        self.treeWidget.topLevelItem(2).setText(0, _translate("MainWindow", "Send Commands"))
        self.treeWidget.topLevelItem(3).setText(0, _translate("MainWindow", "Basic Settings"))
        self.treeWidget.topLevelItem(3).child(0).setText(0, _translate("MainWindow", "Funcionalidade: Proporciona uma interface para ajustar configurações básicas do sistema.\n"
"\n"
"Uso: Ajuste parâmetros básicos como exposições, oversample, altura do scan, entre outros. Utilize os botões para salvar, carregar ou limpar configurações.\n"
"\n"
"\n"
""))
        self.treeWidget.topLevelItem(4).setText(0, _translate("MainWindow", "Advanced Settings"))
        self.treeWidget.topLevelItem(4).child(0).setText(0, _translate("MainWindow", "Funcionalidade: Permite ao usuário ajustar parâmetros avançados do sistema.\n"
"\n"
"Uso: Modifique as configurações como necessário. Clique em \"Send Parameters\" para aplicar as mudanças. \n"
"Use \"Download JSON\" para salvar as configurações e \"Upload JSON\" para carregar  configurações previamente salvas.\n"
"\n"
"\n"
""))
        self.treeWidget.setSortingEnabled(__sortingEnabled)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
